openapi: 3.0.0
info:
  version: "2.0.0"
  title: Component Schemas
  description: |
    This document specifies the schemas used for all APIs.
tags:
  - name: "Component Schemas"
    description: "Component Schemas"
paths: { }
components:
  schemas:
    PutCustomerRequest:
      type: object
      properties:
        id:
          description: The ID of the customer as returned in the response of a previous PUT request.
          type: string
        account:
          description: The Stellar or Muxed Account authenticated with the Platform via SEP-10.
          type: string
        memo:
          description: The memo value identifying a customer with a shared account, where the shared account is `account`.
          type: string
        memo_type:
          description: The type of memo used to identify a customer with a shared account.
          type: string
          enum:
            - id
            - hash
            - text
        type:
          description: |
            The type of action the customer is being KYCd for. See the 
            [Type Specification](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0012.md#type-specification) 
            documented in SEP-12.
          type: string
        first_name:
          type: string
        last_name:
          type: string
        additional_name:
          type: string
        address_country_code:
          type: string
        state_or_province:
          type: string
        city:
          type: string
        postal_code:
          type: string
        address:
          type: string
        mobile_number:
          type: string
        email_address:
          type: string
        birth_date:
          type: string
          format: date
        birth_place:
          type: string
        birth_country_code:
          type: string
        bank_account_number:
          type: string
        bank_account_type:
          type: string
        bank_number:
          type: string
        bank_phone_number:
          type: string
        bank_branch_number:
          type: string
        tax_id:
          type: string
        tax_id_name:
          type: string
        occupation:
          type: string
        employer_name:
          type: string
        employer_address:
          type: string
        language_code:
          type: string
        id_type:
          type: string
        id_country_code:
          type: string
        id_issue_date:
          type: string
          format: date
        id_expiration_date:
          type: string
          format: date
        id_number:
          type: string
        ip_address:
          type: string
        sex:
          type: string

    PutCustomerResponse:
      type: object
      properties:
        id:
          type: string

    PutCustomerCallbackRequest:
      type: object
      properties:
        id:
          description: The ID of the customer as returned in the response of a previous PUT request.
          type: string
        account:
          description: The Stellar or Muxed Account authenticated with the Platform via SEP-10.
          type: string
        memo:
          description: The memo value identifying a customer with a shared account, where the shared account is `account`.
          type: string
        memo_type:
          description: The type of memo used to identify a customer with a shared account.
          type: string
          enum:
            - id
            - hash
            - text
        url:
          description: A callback URL that the SEP-12 server will POST to when the status of the customer changes.
          type: string

    FeeResponse:
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/Amount'

    RateResponse:
      type: object
      properties:
        rate:
          type: object
          properties:
            id:
              type: string
              description: Id of the firm quote. NOT USED when `type=indicative*`.
            expires_at:
              type: string
              format: date-time
              description: Expirations are NOT USED when `type=indicative*`.
            price:
              type: string
              description: The conversion price offered by the anchor for one unit of `buy_asset` in terms of `sell_asset`, without including fees. In traditional finance, `buy_asset` would be referred to as the base asset and `sell_asset` as the counter asset. The formula `sell_amount - fee = price * buy_amount` must hold true ([ref](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0038.md#price-formulas)).
            total_price:
              type: string
              description: The total conversion price offered by the anchor for one unit of `buy_asset` in terms of `sell_asset`, including fees. In traditional finance, `buy_asset` would be referred to as the base asset and `sell_asset` as the counter asset. NOT USED when `type=indicative_prices`. The formula `sell_amount = total_price * buy_amount` must hold true ([ref](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0038.md#price-formulas)).
            sell_amount:
              type: string
              description: The amount of `sell_asset` the anchor will exchange for `buy_asset`. It could be different from the `sell_amount` provided in the request, depending on how fees are applied by the Anchor.
            buy_amount:
              type: string
              description: The amount of `buy_asset` the anchor will provide with `sell_asset`. It could be different from the `buy_amount` provided in the request, depending on how fees are applied by the Anchor.
            fee:
              $ref: '#/components/schemas/RateFeeResponse'
          required:
            - price
            - sell_amount
            - buy_amount

    RateFeeResponse:
      type: object
      description: Fees are NOT USED when `type=indicative_prices`.
      properties:
        total:
          type: string
          description: The total fee to be applied.
        asset:
          type: string
          description: The asset the fee will be charged in. Must be represented in [Asset Identification Format](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0038.md#asset-identification-format).
        details:
          type: array
          items:
            $ref: '#/components/schemas/RateFeeDetailResponse'
      required:
        - total
        - asset

    RateFeeDetailResponse:
      type: object
      properties:
        name:
          type: string
          description: The name of the fee, for example `ACH fee`, `Brazilian conciliation fee`, `Service fee`, etc.
        description:
          type: string
          description: A text describing the fee.
        amount:
          type: string
          description: The amount of asset applied. If `fee.details` is provided, `sum(fee.details.amount)` should be equals `fee.total`.
      required:
        - name
        - amount

    MutableTransaction:
      type: object
      properties:
        id:
          type: string
        sep:
          type: string
          enum: [ "24", "31", "38" ]
        kind:
          type: string
          enum: [
            # SEP24
            "deposit",
            "withdrawal",
            #SEP31
            "receive"
          ]
        status:
          type: string
          enum: [
            # Shared
            incomplete,
            completed,
            refunded,
            expired,
            error,
            pending_stellar,
            pending_external,
            # SEP24
            pending_user_transfer_start,
            pending_user_transfer_complete,
            pending_anchor,
            pending_trust,
            pending_user,
            no_market,
            too_small,
            too_large,
            # SEP31
            pending_sender,
            pending_receiver,
            pending_transaction_info_update,
            pending_customer_info_update
          ]
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        kyc_verified:
          type: boolean
        quote_id:
          type: string
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        source_account:
          type: string
        destination_account:
          type: string
        external_transaction_id:
          type: string
        custodial_transaction_id:
          type: string
        memo:
          type: string
        memo_type:
          type: string
        customers:
          type: object
          description: |
            The Identification info of the sending and receiving customers. If they were created through [SEP-12](https://stellar.org/protocol/sep-12),
            this object should contain the SEP-12 customer `id`. Otherwise, the `account` address of the customer.
          properties:
            sender:
              $ref: '#/components/schemas/StellarId'
            receiver:
              $ref: '#/components/schemas/StellarId'
        creator:
          $ref: '#/components/schemas/StellarId'

    TransactionSEP31:
      type: object
      properties:
        id:
          type: string
        sep:
          type: string
          enum: [ "31" ]
        kind:
          type: string
          enum: [
            #SEP31
            "receive"
          ]
        status:
          type: string
          enum: [
            # Shared
            incomplete,
            completed,
            refunded,
            expired,
            error,
            pending_stellar,
            pending_external,
            # SEP31
            pending_sender,
            pending_receiver,
            pending_transaction_info_update,
            pending_customer_info_update
          ]
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        quote_id:
          type: string
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        external_transaction_id:
          type: string
        customers:
          type: object
          description: |
            The Identification info of the sending and receiving customers. If they were created through [SEP-12](https://stellar.org/protocol/sep-12),
            this object should contain the SEP-12 customer `id`. Otherwise, the `account` address of the customer.
          properties:
            sender:
              $ref: '#/components/schemas/StellarId'
            receiver:
              $ref: '#/components/schemas/StellarId'
        creator:
          $ref: '#/components/schemas/StellarId'

    TransactionSEP24:
      type: object
      required: [ id, sep, kind, status, amount_expected, destination_account, started_at ]
      properties:
        id:
          type: string
        sep:
          type: string
          enum: [ "24" ]
        kind:
          type: string
          enum: [
            # SEP24
            "deposit",
            "withdrawal",
          ]
        status:
          type: string
          enum: [
            # Shared
            incomplete,
            completed,
            refunded,
            expired,
            error,
            pending_stellar,
            pending_external,
            # SEP24
            pending_user_transfer_start,
            pending_user_transfer_complete,
            pending_anchor,
            pending_trust,
            pending_user,
            no_market,
            too_small,
            too_large,
          ]
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        kyc_verified:
          type: boolean
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        source_account:
          type: string
        destination_account:
          type: string
        external_transaction_id:
          type: string
        memo:
          type: string
        memo_type:
          type: string

    MemoType:
      type: string
      enum: [ text id hash none ]

    AllTransactionsSEP24:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: './schemas.yml#/components/schemas/TransactionSEP24'
        cursor:
          type: string

    AllTransactionSEP31:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: './schemas.yml#/components/schemas/TransactionSEP31'
        cursor:
          type: string

    PatchTransactionRequest:
      type: object
      properties:
        transaction:
          $ref: '#/components/schemas/MutableTransaction'
    Amount:
      type: object
      required:
        - amount
        - asset
      properties:
        amount:
          type: string
        asset:
          type: string
    Refunds:
      type: object
      properties:
        amount_refunded:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        payments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              id_type:
                type: string
                enum:
                  - stellar
                  - external
              amount:
                $ref: '#/components/schemas/Amount'
              fee:
                $ref: '#/components/schemas/Amount'
              requested_at:
                type: string
                format: date-time
              refunded_at:
                type: string
                format: date-time

    StellarId:
      type: object
      description: |
        StellarId's are objects that identify end-users and SEP-31 Sending Anchors, but not SEP-31 Receiving Anchors.

        For a SEP-12 customer, the `id` field should be sufficient to fully identify the customer in the business' Backend.
        
        For a SEP-31 Sending Anchor, the `account` field should be used.
      properties:
        id:
          type: string
          description: The `id` of the customer registered through SEP-12.
        account:
          type: string
          description: Either the Stellar account or Muxed account address of the on-chain entity.
    StellarTransaction:
      type: object
      required:
        - id
        - created_at
        - envelope
        - payments
      properties:
        id:
          type: string
          description: The ID of the transaction in the Stellar network.
        memo:
          type: string
          description: The memo of the transaction in the Stellar network.
        memo_type:
          type: string
          description: The memo type of the transaction in the Stellar network. Should be present if memo is not null.
          enum:
            - text
            - hash
            - id
        created_at:
          type: string
          format: date-time
          description: The time the transaction was registered in the Stellar network.
        envelope:
          type: string
          description: The transaction envelope, containing all the transaction information.
        payments:
          type: array
          items:
            type: object
            required:
              - id
              - payment_type
              - source_account
              - destination_account
              - amount
            properties:
              id:
                type: string
                description: The ID of the payment in the Stellar Network.
              payment_type:
                type: string
                description: The type of payment in the Stellar Network.
                enum:
                  - payment
                  - path_payment
                default: payment
              source_account:
                type: string
                description: The account being debited in the Stellar Network.
              destination_account:
                type: string
                description: The account being credited in the Stellar Network.
              amount:
                $ref: '#/components/schemas/Amount'
    Error:
      type: object
      properties:
        error:
          type: string
        id:
          type: string
      required:
        - error

    CreateTransactionPaymentResponse:
      type: object
      properties:
        id:
          type: string

    CustodyError:
      type: object
      properties:
        rawErrorMessage:
          type: string
      required:
        - rawErrorMessage

    CreateCustodyTransactionRequest:
      type: object
      properties:
        id:
          type: string
          description: Id of SEP24/SEP31 transaction
        memo:
          type: string
          description: Memo
        memoType:
          type: string
          description: Type of the memo
        protocol:
          type: string
          description: "Protocol of the transaction. Possible values: 24, 31"
        fromAccount:
          type: string
          description: Sent from address
        toAccount:
          type: string
          description: Sent to address
        amount:
          type: string
          description: Amount sent/received
        amountAsset:
          type: string
          description: "Asset code in format: stellar:{asset_CODE}:{ASSET_ISSUER}"
        kind:
          type: string
          description: The kind of the transaction
          enum:
            - deposit
            - withdrawal
            - receive

    GenerateDepositAddressResponse:
      type: object
      properties:
        address:
          type: string
          description: Generated deposit address
        memo:
          type: string
          description: Memo
        memoType:
          type: string
          description: Type of the memo

    FireblocksEventObject:
      type: object
      properties:
        type:
          type: string
          description: Event type
          enum:
            - TRANSACTION_CREATED
            - TRANSACTION_STATUS_UPDATED
            - TRANSACTION_APPROVAL_STATUS_UPDATED
            - VAULT_ACCOUNT_ADDED
            - VAULT_ACCOUNT_ASSET_ADDED
            - INTERNAL_WALLET_ASSET_ADDED
            - EXTERNAL_WALLET_ASSET_ADDED
            - EXCHANGE_ACCOUNT_ADDED
            - FIAT_ACCOUNT_ADDED
            - NETWORK_CONNECTION_ADDED
        tenantId:
          type: string
          description: Unique id of your Fireblocks' workspace.
        timestamp:
          type: integer
          description: Timestamp in milliseconds.
        data:
          type: object
          properties:
            id:
              type: string
              description: ID of the transaction.
            assetId:
              type: string
              description: Transaction asset.
            source:
              $ref: '#/components/schemas/TransferPeerPathResponse'
            destination:
              $ref: '#/components/schemas/TransferPeerPathResponse'
            requestedAmount:
              type: number
              description: The amount requested by the user.
            amountInfo:
              type: object
              properties:
                amount:
                  type: string
                  description: If the transfer is a withdrawal from an exchange, the actual amount that was requested to be transferred. Otherwise, it is the requested amount.
                requestedAmount:
                  type: string
                  description: The amount requested by the user.
                netAmount:
                  type: string
                  description: The net amount of the transaction, after fee deduction.
                amountUSD:
                  type: string
                  description: The USD value of the requested amount.
            feeInfo:
              type: object
              properties:
                networkFee:
                  type: string
                  description: The fee paid to the network.
                serviceFee:
                  type: string
                  description: The total fee deducted by the exchange from the actual requested amount.
            amount:
              type: number
              description: If the transfer is a withdrawal from an exchange, the actual amount that was requested to be transferred. Otherwise, the requested amount.
            netAmount:
              type: number
              description: The net amount of the transaction, after fee deduction.
            amountUSD:
              type: number
              description: The USD value of the requested amount.
            serviceFee:
              type: number
              description: The total fee deducted by the exchange from the actual requested amount
            treatAsGrossAmount:
              type: boolean
              description: For outgoing transactions, if true, the network fee is deducted from the requested amount.
            networkFee:
              type: number
              description: The fee paid to the network.
            createdAt:
              type: number
              description: Unix timestamp.
            lastUpdated:
              type: number
              description: Unix timestamp.
            status:
              type: string
              enum:
                - SUBMITTED
                - QUEUED
                - PENDING_AUTHORIZATION
                - PENDING_SIGNATURE
                - BROADCASTING
                - PENDING_3RD_PARTY_MANUAL_APPROVAL
                - PENDING_3RD_PARTY
                - CONFIRMING
                - PARTIALLY_COMPLETED
                - PENDING_AML_SCREENING
                - COMPLETED
                - CANCELLED
                - REJECTED
                - BLOCKED
                - FAILED
            txHash:
              type: string
              description: Blockchain hash of the transaction.
            index:
              type: number
              description: For UTXO based assets this is the vOut, for Ethereum based, this is the index of the event of the contract call.
            subStatus:
              type: string
            sourceAddress:
              type: string
              description: For account based assets only, the source address of the transaction.
            destinationAddress:
              type: string
              description: Address where the asset were transferred.
            destinationAddressDescription:
              type: string
              description: Description of the address.
            destinationTag:
              type: string
              description: Destination tag for XRP
            signedBy:
              type: array
              items:
                type: string
              description: Signers of the transaction.
            createdBy:
              type: string
              description: Initiator of the transaction.
            rejectedBy:
              type: string
              description: User ID of the user that rejected the transaction
            addressType:
              type: string
              description: ONE_TIME, WHITELISTED.
            note:
              type: string
              description: Custom note of the transaction.
            exchangeTxId:
              type: string
              description: If the transaction originated from an exchange, this is the exchange tx ID.
            feeCurrency:
              type: string
              description: The asset which was taken to pay the fee
            operation:
              type: string
              description: Default operation is "TRANSFER".
            amlScreeningResult:
              $ref: '#/components/schemas/AmlScreeningResult'
            customerRefId:
              type: string
              description: The ID for AML providers to associate the owner of funds with transactions.
            numOfConfirmations:
              type: number
              description: The number of confirmations of the transaction.
            networkRecords:
              type: object
              properties:
                source:
                  $ref: '#/components/schemas/TransferPeerPathResponse'
                destination:
                  $ref: '#/components/schemas/TransferPeerPathResponse'
                txHash:
                  type: string
                  description: Blockchain hash of the transaction.
                networkFee:
                  type: number
                  description: The fee paid to the network.
                assetId:
                  type: string
                  description: Transaction asset.
                netAmount:
                  type: number
                  description: The net amount of the transaction, after fee deduction.
                status:
                  type: string
                  enum:
                    - DROPPED
                    - BROADCASTING
                    - CONFIRMING
                    - FAILED
                    - CONFIRMED
                type:
                  type: string
                  description: Type of the blockchain network operation.
                destinationAddress:
                  type: string
                  description: Destination address.
                sourceAddress:
                  type: string
                  description: For account based assets only, the source address of the transaction.
            replacedTxHash:
              type: string
              description: In case of an RBF transaction, the hash of the dropped transaction.
            externalTxId:
              type: string
              description: Unique transaction ID provided by the user.
            destinations:
              type: array
              items:
                $ref: '#/components/schemas/DestinationsResponse'
            blockInfo:
              type: object
              properties:
                blockHeight:
                  type: string
                  description: The height (number) of the block the transaction was mined in.
                blockHash:
                  type: string
                  description: The hash of the block the transaction was mined in.
            rewardsInfo:
              type: object
              properties:
                srcRewards:
                  type: string
                  description: The ALGO rewards acknowledged by the source account of the transaction.
                destRewards:
                  type: string
                  description: The ALGO rewards acknowledged by the destination account of the transaction.
            authorizationInfo:
              type: object
              properties:
                allowOperatorAsAuthorizer:
                  type: boolean
                  description: Set to "true" if the intiator of the transaction can be one of the approvers.
                logic:
                  type: string
                  description: This is the logic that is applied between the different authorization groups listed below.
                groups:
                  type: array
                  items:
                    type: object
                    properties:
                      th:
                        type: number
                        description: The threshold of required approvers in this authorization group.
                      users:
                        type: array
                        description: The list of users that the threshold number is applied to for transaction approval.
            signedMessages:
              type: array
              items:
                type: object
                properties:
                  content:
                    type: string
                    description: The message for signing (hex-formatted).
                  algorithm:
                    type: string
                    description: The algorithm that was used for signing
                  derivationPath:
                    type: array
                    items:
                      type: number
                  signature:
                    type: string
                    description: The message signature.
                  publicKey:
                    type: string
                    description: Signature's public key that can be used for verification.
            extraParameters:
              type: string
              description: Protocol / operation specific parameters.
            systemMessages:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: The type of system message being returned.
                  message:
                    type: string
                    description: In plain text, the specific message being returned from the system about its status.

    DestinationsResponse:
      type: object
      properties:
        amount:
          type: string
          description: The amount to be sent to this destination.
        destination:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        amountUSD:
          type: number
          description: The USD value of the requested amount.
        destinationAddress:
          type: string
          description: Address where the asset were transferred.
        destinationAddressDescription:
          type: string
          description: Description of the address.
        amlScreeningResult:
          $ref: '#/components/schemas/AmlScreeningResult'
        customerRefId:
          type: string
          description: The ID for AML providers to associate the owner of funds with transactions.

    AmlScreeningResult:
      type: object
      properties:
        provider:
          type: string
          description: The AML service provider.
        payload:
          type: string
          description: The response of the AML service provider.

    TransferPeerPathResponse:
      type: object
      properties:
        type:
          type: string
          enum:
            - VAULT_ACCOUNT
            - EXCHANGE_ACCOUNT
            - INTERNAL_WALLET
            - EXTERNAL_WALLET
            - ONE_TIME_ADDRESS
            - NETWORK_CONNECTION
            - FIAT_ACCOUNT
            - COMPOUND
            - UNKNOWN
        id:
          type: string
          description: The ID of the exchange account to return
        name:
          type: string
          description: The name of the exchange account
        subType:
          type: string
          description: The specific exchange, fiat account or unmanaged wallet (either INTERNAL / EXTERNAL)

    Event:
      type: object
      properties:
        id:
          type: string
        sep:
          type: string
        type:
          type: string
          enum:
            - transaction_created
            - transaction_status_changed
            - transaction_error
            - quote_created - a quote was created via the SEP38 API
          description: |
            The transaction event type. Can be one of the following:
            - `transaction_created` - a transaction was created through the SEP endpoints. The payload is in the `transaction` field.
            - `transaction_status_changed` - the status of a transaction has changed. The payload is in the `transaction` field.
            - `transaction_error` - error processing the transaction. The payload is in the `transaction` field.
            - `quote_created - a quote was created via the SEP38 API. The payload is in the `quote` field.
        transaction:
          $ref: '#/components/schemas/MutableTransaction'
        quote:
          $ref: '#/components/schemas/Quote'

    Quote:
      type: object
      properties:
        id:
          type: string
        sell_amount:
          type: string
        sell_asset:
          type: string
        buy_amount:
          type: string
        buy_asset:
          type: string
        expires_at:
          type: string
          format: date-time
        price:
          type: string
        total_price:
          type: string
        creator:
          $ref: '#/components/schemas/StellarId'
        transaction_id:
          type: string
        created_at:
          type: string
          format: date-time
